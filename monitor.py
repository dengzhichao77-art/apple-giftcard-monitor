import os
import requests
import time
from playwright.sync_api import sync_playwright
from bs4 import BeautifulSoup

# LINE Messaging API ÈÖçÁΩÆ - ‰ΩøÁî®ÊÇ®Êèê‰æõÁöÑÂá≠ËØÅ
LINE_ACCESS_TOKEN = "IvrlgZ9u0izzW2C3Eb0xyHvprQHH0x70DMf99E4itGBe0HsqYX8JE4MTdzCpSm9e2VmqhoNPCWgIk6LVeAHrXiQCmTBcoZ6ag6KPiI8BIntkrUlXfORESUWdlO60BgwE0PJ9XFIbO37ugR+eo4B5swdB04t89/1O/w1cDnyilFU="
LINE_USER_ID = "U7278cf6212a50c40127da84e3c5e2f27"

def send_line_message(message):
    """ÂèëÈÄÅLINEÊ∂àÊÅØÁªôËá™Â∑±"""
    try:
        url = "https://api.line.me/v2/bot/message/push"
        headers = {
            'Content-Type': 'application/json',
            'Authorization': f'Bearer {LINE_ACCESS_TOKEN}'
        }
        
        message_data = {
            "to": LINE_USER_ID,
            "messages": [
                {
                    "type": "text",
                    "text": message
                }
            ]
        }
        
        response = requests.post(url, headers=headers, json=message_data)
        
        if response.status_code == 200:
            print("‚úÖ LINEÊ∂àÊÅØÂèëÈÄÅÊàêÂäü!")
            return True
        elif response.status_code == 401:
            print("‚ùå Access TokenÊó†Êïà")
            return False
        elif response.status_code == 403:
            print("‚ùå ÊùÉÈôê‰∏çË∂≥ÔºåËØ∑Ê£ÄÊü•ChannelËÆæÁΩÆ")
            return False
        else:
            print(f"‚ùå LINEÊ∂àÊÅØÂèëÈÄÅÂ§±Ë¥•: {response.status_code} - {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå LINEÊ∂àÊÅØÂèëÈÄÅÈîôËØØ: {str(e)}")
        return False

def send_line_flex_message(discounts):
    """ÂèëÈÄÅÊõ¥ÁæéËßÇÁöÑLINE Flex Message"""
    try:
        url = "https://api.line.me/v2/bot/message/push"
        headers = {
            'Content-Type': 'application/json',
            'Authorization': f'Bearer {LINE_ACCESS_TOKEN}'
        }
        
        if discounts:
            # ÂàõÂª∫ÊäòÊâ£‰ø°ÊÅØÁöÑFlex Message
            bubbles = []
            
            for i, deal in enumerate(discounts[:5]):  # ÊúÄÂ§öÊòæÁ§∫5‰∏™
                bubble = {
                    "type": "bubble",
                    "size": "micro",
                    "body": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": f"{deal['discount']}% OFF",
                                "weight": "bold",
                                "size": "lg",
                                "color": "#1DB446"
                            },
                            {
                                "type": "separator",
                                "margin": "md"
                            },
                            {
                                "type": "box",
                                "layout": "vertical",
                                "margin": "lg",
                                "spacing": "sm",
                                "contents": [
                                    {
                                        "type": "box",
                                        "layout": "baseline",
                                        "contents": [
                                            {
                                                "type": "text",
                                                "text": "È°çÈù¢",
                                                "color": "#aaaaaa",
                                                "size": "sm",
                                                "flex": 2
                                            },
                                            {
                                                "type": "text",
                                                "text": deal['face_value'],
                                                "wrap": True,
                                                "color": "#666666",
                                                "size": "sm",
                                                "flex": 4
                                            }
                                        ]
                                    },
                                    {
                                        "type": "box",
                                        "layout": "baseline",
                                        "contents": [
                                            {
                                                "type": "text",
                                                "text": "‰æ°Ê†º",
                                                "color": "#aaaaaa",
                                                "size": "sm",
                                                "flex": 2
                                            },
                                            {
                                                "type": "text",
                                                "text": deal['price'],
                                                "wrap": True,
                                                "color": "#666666",
                                                "size": "sm",
                                                "flex": 4
                                            }
                                        ]
                                    },
                                    {
                                        "type": "box",
                                        "layout": "baseline",
                                        "contents": [
                                            {
                                                "type": "text",
                                                "text": "ÁØÄÁ¥Ñ",
                                                "color": "#aaaaaa",
                                                "size": "sm",
                                                "flex": 2
                                            },
                                            {
                                                "type": "text",
                                                "text": deal['discount_amount'],
                                                "wrap": True,
                                                "color": "#FF0000",
                                                "size": "sm",
                                                "flex": 4,
                                                "weight": "bold"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "footer": {
                        "type": "box",
                        "layout": "vertical",
                        "spacing": "sm",
                        "contents": [
                            {
                                "type": "button",
                                "style": "primary",
                                "height": "sm",
                                "action": {
                                    "type": "uri",
                                    "label": "Ë≥ºÂÖ•„Éö„Éº„Ç∏„Å∏",
                                    "uri": "https://amaten.com/exhibitions/apple"
                                }
                            }
                        ]
                    }
                }
                bubbles.append(bubble)
            
            # Ê∑ªÂä†ÊÄªÁªìbubble
            summary_bubble = {
                "type": "bubble",
                "size": "micro",
                "body": {
                    "type": "box",
                    "layout": "vertical",
                    "contents": [
                        {
                            "type": "text",
                            "text": "üìä „Çµ„Éû„É™„Éº",
                            "weight": "bold",
                            "size": "lg",
                            "color": "#000000"
                        },
                        {
                            "type": "separator",
                            "margin": "md"
                        },
                        {
                            "type": "box",
                            "layout": "vertical",
                            "margin": "lg",
                            "spacing": "sm",
                            "contents": [
                                {
                                    "type": "box",
                                    "layout": "baseline",
                                    "contents": [
                                        {
                                            "type": "text",
                                            "text": "Ë¶ã„Å§„Åë„ÅüÂâ≤Âºï",
                                            "color": "#aaaaaa",
                                            "size": "sm",
                                            "flex": 3
                                        },
                                        {
                                            "type": "text",
                                            "text": f"{len(discounts)}‰ª∂",
                                            "wrap": True,
                                            "color": "#1DB446",
                                            "size": "sm",
                                            "flex": 2,
                                            "weight": "bold"
                                        }
                                    ]
                                },
                                {
                                    "type": "box",
                                    "layout": "baseline",
                                    "contents": [
                                        {
                                            "type": "text",
                                            "text": "ÊúÄ‰ΩéÂâ≤Âºï",
                                            "color": "#aaaaaa",
                                            "size": "sm",
                                            "flex": 3
                                        },
                                        {
                                            "type": "text",
                                            "text": f"{discounts[0]['discount']}%",
                                            "wrap": True,
                                            "color": "#FF0000",
                                            "size": "sm",
                                            "flex": 2,
                                            "weight": "bold"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
            bubbles.append(summary_bubble)
            
            message_data = {
                "to": LINE_USER_ID,
                "messages": [
                    {
                        "type": "flex",
                        "altText": f"Apple„ÇÆ„Éï„Éà„Ç´„Éº„ÉâÂâ≤Âºï {len(discounts)}‰ª∂Ë¶ã„Å§„Åã„Çä„Åæ„Åó„Åü",
                        "contents": {
                            "type": "carousel",
                            "contents": bubbles
                        }
                    }
                ]
            }
        else:
            # Ê≤°ÊúâÊäòÊâ£Êó∂ÁöÑÁÆÄÂçïÊ∂àÊÅØ
            message_data = {
                "to": LINE_USER_ID,
                "messages": [
                    {
                        "type": "text",
                        "text": "üìä Apple„ÇÆ„Éï„Éà„Ç´„Éº„ÉâÁõ£Ë¶ñ„É¨„Éù„Éº„Éà\n\nÁèæÂú®„ÄÅ85%‰ª•‰∏ã„ÅÆÂâ≤ÂºïÂïÜÂìÅ„ÅØË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ\n\nÊ¨°„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ„ÅØ2ÊôÇÈñìÂæå„Åß„Åô„ÄÇ‚è∞"
                    }
                ]
            }
        
        response = requests.post(url, headers=headers, json=message_data)
        
        if response.status_code == 200:
            print("‚úÖ LINE Flex MessageÈÄÅ‰ø°ÊàêÂäü!")
            return True
        else:
            print(f"‚ùå LINE Flex MessageÈÄÅ‰ø°Â§±Êïó: {response.status_code}")
            # Â§±Ë¥•Êó∂ÂõûÈÄÄÂà∞ÊôÆÈÄöÊñáÊú¨Ê∂àÊÅØ
            if discounts:
                message = f"üéâ Apple„ÇÆ„Éï„Éà„Ç´„Éº„ÉâÂâ≤ÂºïÊÉÖÂ†±\n\n{len(discounts)}‰ª∂„ÅÆÂâ≤ÂºïÂïÜÂìÅ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„ÅüÔºÅ\n\n"
                for deal in discounts[:3]:
                    message += f"‚Ä¢ {deal['discount']}% OFF (È°çÈù¢: {deal['face_value']} ‚Üí ‰æ°Ê†º: {deal['price']})\n"
                message += "\nüîó https://amaten.com/exhibitions/apple"
            else:
                message = "üìä ÁèæÂú®„ÄÅ85%‰ª•‰∏ã„ÅÆÂâ≤ÂºïÂïÜÂìÅ„ÅØË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ"
            
            return send_line_message(message)
            
    except Exception as e:
        print(f"‚ùå LINE Flex MessageÈÄÅ‰ø°„Ç®„É©„Éº: {str(e)}")
        return False

def check_discounts():
    print("üéØ Apple„ÇÆ„Éï„Éà„Ç´„Éº„ÉâÂâ≤Âºï„ÉÅ„Çß„ÉÉ„ÇØÈñãÂßã...")
    
    try:
        with sync_playwright() as p:
            print("üåê „Éñ„É©„Ç¶„Ç∂Ëµ∑Âãï...")
            browser = p.chromium.launch(headless=True)
            page = browser.new_page()
            
            page.set_extra_http_headers({
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
            })
            
            print("üì° https://amaten.com/exhibitions/apple „Å´„Ç¢„ÇØ„Çª„Çπ...")
            page.goto('https://amaten.com/exhibitions/apple', wait_until='networkidle', timeout=60000)
            
            print("‚è≥ „Éö„Éº„Ç∏Ë™≠„ÅøËæº„ÅøÂæÖÊ©ü...")
            page.wait_for_timeout(5000)
            
            content = page.content()
            print(f"üìä „Éö„Éº„Ç∏„Ç≥„É≥„ÉÜ„É≥„ÉÑÈï∑: {len(content)} ÊñáÂ≠ó")
            
            browser.close()
            return content
        
    except Exception as e:
        print(f"‚ùå Ââ≤Âºï„ÉÅ„Çß„ÉÉ„ÇØ„Ç®„É©„Éº: {str(e)}")
        import traceback
        traceback.print_exc()
        return None

def extract_discounts_from_html(html_content):
    """HTML„Åã„ÇâÂâ≤ÂºïÊÉÖÂ†±„ÇíÊäΩÂá∫"""
    print("üîç BeautifulSoup„ÅßHTML„Åã„ÇâÂâ≤ÂºïÊÉÖÂ†±„ÇíÊäΩÂá∫...")
    
    discounts = []
    
    try:
        soup = BeautifulSoup(html_content, 'html.parser')
        
        # js-rateË¶ÅÁ¥†„ÇíÊ§úÁ¥¢
        rate_elements = soup.find_all('span', class_='js-rate')
        print(f"üìà {len(rate_elements)} ÂÄã„ÅÆjs-rateË¶ÅÁ¥†„ÇíÁô∫Ë¶ã")
        
        for element in rate_elements:
            try:
                discount_text = element.get_text().strip()
                discount = float(discount_text)
                
                # 85%‰ª•‰∏ã„ÅÆÂâ≤Âºï„ÅÆ„ÅøÂØæË±°
                if discount < 85:
                    row = element.find_parent('tr')
                    if row:
                        face_value_elem = row.find('span', class_='js-face_value')
                        face_value = face_value_elem.get_text().strip() if face_value_elem else "‰∏çÊòé"
                        
                        price_elem = row.find('span', class_='js-price')
                        price = price_elem.get_text().strip() if price_elem else "‰∏çÊòé"
                        
                        discount_amount_elem = row.find('span', class_='js-discount')
                        discount_amount = discount_amount_elem.get_text().strip() if discount_amount_elem else "‰∏çÊòé"
                        
                        discounts.append({
                            'discount': discount,
                            'face_value': face_value,
                            'price': price,
                            'discount_amount': discount_amount,
                            'source': 'js-rate element'
                        })
                        print(f"‚úÖ Ââ≤ÂºïÁô∫Ë¶ã: {discount}% (È°çÈù¢: {face_value} ‚Üí ‰æ°Ê†º: {price}, ÁØÄÁ¥Ñ: {discount_amount})")
            except ValueError:
                continue
        
        # Ââ≤ÂºïÁéá„Åß„ÇΩ„Éº„ÉàÔºà‰Ωé„ÅÑÈ†ÜÔºâ
        discounts.sort(key=lambda x: x['discount'])
        
        print(f"üìà ÊúâÂäπ„Å™Ââ≤ÂºïÂêàË®à: {len(discounts)} ‰ª∂")
        return discounts
        
    except Exception as e:
        print(f"‚ùå Ââ≤ÂºïÊäΩÂá∫„Ç®„É©„Éº: {str(e)}")
        return []

def send_notification(discounts):
    """LINE„Å´ÈÄöÁü•„ÇíÈÄÅ‰ø°"""
    try:
        print("üì® LINEÈÄöÁü•„ÇíÈÄÅ‰ø°...")
        
        # Flex Message„ÅßÈÄÅ‰ø°
        success = send_line_flex_message(discounts)
        
        if success:
            print("‚úÖ LINEÈÄöÁü•ÈÄÅ‰ø°ÊàêÂäü!")
            return True
        else:
            print("‚ùå LINEÈÄöÁü•ÈÄÅ‰ø°Â§±Êïó")
            return False
            
    except Exception as e:
        print(f"‚ùå LINEÈÄöÁü•ÈÄÅ‰ø°„Ç®„É©„Éº: {str(e)}")
        return False

def main():
    print("=" * 60)
    print("üîÑ APPLE„ÇÆ„Éï„Éà„Ç´„Éº„Éâ„É¢„Éã„Çø„ÉºËµ∑Âãï")
    print("=" * 60)
    
    start_time = time.time()
    
    # „Éö„Éº„Ç∏„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÂèñÂæó
    html_content = check_discounts()
    
    if html_content is None:
        print("‚ùå „Éö„Éº„Ç∏„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÅÆÂèñÂæó„Å´Â§±Êïó")
        return
    
    # Ââ≤ÂºïÊÉÖÂ†±„ÇíÊäΩÂá∫
    discounts = extract_discounts_from_html(html_content)
    
    # LINEÈÄöÁü•„ÇíÈÄÅ‰ø°
    send_notification(discounts)
    
    execution_time = time.time() - start_time
    print(f"‚è±Ô∏è Á∑èÂÆüË°åÊôÇÈñì: {execution_time:.2f} Áßí")
    print("=" * 60)
    print("‚úÖ „É¢„Éã„Çø„É™„É≥„Ç∞ÂÆå‰∫Ü")
    
    return discounts

if __name__ == "__main__":
    main()
